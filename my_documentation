Refactoring the project:
1. Personal_Details
1. php artisan make:controller PersonalDetailController --resource --model=PersonalDetail
2. in the PersonalDetailController, store method:
     // Store the data from personal_details.blade.php
        PersonalDetail::create([
            // The input fields
            'user_id'=>$request -> user()->id, // the relationship
            'surname'=>$request -> input('surname'),
            'first_name'=>$request -> input('first_name'),
            'last_name'=>$request -> input('last_name'),
            'date'=> $request -> input('date'),
            'gender'=> $request -> input('gender'),
            'national_id'=> $request -> input('national_id'),
            'nationality'=> $request -> input('nationality'),
            'religion'=> $request -> input('religion'),
            'email'=> $request -> input('email'),
            'phone'=> $request -> input('phone'),
            'city'=> $request -> input('city'),
            'pob'=> $request -> input('pob'),
        ]);

        // Redirect
        return redirect(route('parent details'))
        ->with('success', "Your personal details have been received successfully! Now fill the parent details...");
3. In routes:
        Route::resource('personal_details', PersonalDetailController::class);
2. Parent_details
1. php artisan make:controller ParentDetailController --resource --model=ParentDetail
2. Add the input fields into the store method, remember:
        'user_id'=>$request -> user()->id, // the relationship and add it to the model as well
3. Change the route name in the form, to route('parent_details.store')
        return redirect(route('spouse_details.index'))
4. Change the routes to:
        Route::resource('parent_details', ParentDetailController::class)

3. Spouse details
1. php artisan make:controller SpouseDetailController --resource --model=SpouseDetail
2. In index method:
        return view('crud.student_crud.spouse_details');

4. Next of Kin Details
1. php artisan make:controller NextOfKinDetailController --resource --model=NextOfKinDetail
2. In index method, return the view, in store method, create the input fields
3. In the routes, use resource 
4. In the view, change the route to submit through the store method 

